# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lAfCzD2vuHZXph8huwtEOt7RHAjeNZUu
"""

# Install pyspark
!pip install pyspark

# Import SparkSession
from pyspark.sql import SparkSession
# Create a Spark Session
spark = SparkSession.builder.master("local[*]").getOrCreate()
# Check Spark Session Information
spark

# Importing a Spark function from library
from pyspark.sql.functions import col

from pyspark.sql import SparkSession
from pyspark.sql.functions import*

from pyspark.sql.types import*

import pandas as pd
import numpy as np



spark = SparkSession.builder.appName("COVID-19 DATA ANALYSIS AND FUTURE PREDICTION").getOrCreate()

spark.conf.set("spark.sql.repl.eagerEval.enabled", True)

covid_df = spark.read.csv("covid/covid_19_data.csv", header=True, inferSchema=True)

covid_df

covid_df.count()

covid_df.printSchema()

covid_df.select([count(when(isnull(column), column)).alias(column) for column in covid_df.columns])

covid_df = covid_df.na.fill(value=0)
covid_df.select('Province/State').show(3,False)

covid_df.fillna("Province/State")

print(type(covid_df))

maxconfirmedcount = covid_df.groupBy("Country/Region").max("Confirmed")
maxconfirmedcount = maxconfirmedcount.orderBy('max(Confirmed)', ascending=False)
maxconfirmedcount.show(10,False)

maxdeathscount = covid_df.groupBy("Country/Region").max("Deaths")
maxdeathscount = maxdeathscount.orderBy('max(Deaths)', ascending=False)
maxdeathscount.show(10,False)

maxrecoveredcount = covid_df.groupBy("Country/Region").max("Recovered")
maxrecoveredcount = maxrecoveredcount.orderBy('max(Recovered)', ascending=False)
maxrecoveredcount.show(10,False)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
# %matplotlib inline

df=pd.read_csv('covid/covid_19_data.csv')
df.head()

df=df[['Province/State','Country/Region','Confirmed','Deaths','Recovered']]

df.corr()

plt.imshow(df.corr())

plt.imshow(df.corr(), cmap="Spectral")
plt.colorbar()
plt.gcf().set_size_inches(8, 8)
plt.xticks(range(len(df.corr().columns)), df.corr().columns)
plt.yticks(range(len(df.corr().columns)), df.corr().columns)
plt.show()